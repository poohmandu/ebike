<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.6.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.qdigo</groupId>
    <artifactId>ebike</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>${project.artifactId}</name>
    <description>电滴出行微服务</description>
    <packaging>pom</packaging>

    <properties>
        <spring-boot.version>${project.parent.version}</spring-boot.version>
        <spring-cloud.version>Hoxton.SR1</spring-cloud.version>
        <spring-cloud-alibaba.version>2.2.0.RELEASE</spring-cloud-alibaba.version>
        <java.version>1.8</java.version>
        <tk-mybatis.version>2.1.5</tk-mybatis.version>
        <mybatis-plus.version>3.3.0</mybatis-plus.version>
        <pagehelper.version>1.2.13</pagehelper.version>
        <jjwt.version>0.10.7</jjwt.version>
        <mysql-connector.version>8.0.16</mysql-connector.version>
        <hutool.version>5.2.5</hutool.version>
        <javax.inject.version>1</javax.inject.version>
        <bcprov.version>1.59</bcprov.version>
        <dahan.ezmorph.version>1.0.6</dahan.ezmorph.version>
        <dahan.http.version>1.0</dahan.http.version>
        <json-lib.version>2.2.3</json-lib.version>
        <fastjson.version>1.2.62</fastjson.version>
        <guava.version>28.0-jre</guava.version>
        <brave-mysql.version>5.9.1</brave-mysql.version>
        <seata.version>1.1.0</seata.version>
        <spring-boot-admin.version>2.2.1</spring-boot-admin.version>
        <dockerfile-maven.version>1.4.13</dockerfile-maven.version>
        <skipTests>true</skipTests>
        <env>local</env>
    </properties>

    <modules>
        <module>microservice</module>
        <module>common</module>
        <module>gateway</module>
        <module>monitor</module>
        <module>api</module>
    </modules>

    <!--所有app都需要的依赖-->
    <dependencies>
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>${javax.inject.version}</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>


    </dependencies>
    <!--管理所有依赖的版本-->
    <dependencyManagement>
        <dependencies>
            <!-- 非官方组件 -->
            <!--zipkin 对mysql8追踪-->
            <dependency>
                <groupId>io.zipkin.brave</groupId>
                <artifactId>brave-instrumentation-mysql8</artifactId>
                <version>${brave-mysql.version}</version>
            </dependency>
            <!--mybatis-->
            <!--通用mapper 与mybatis plus 二选其一 -->
            <dependency>
                <groupId>tk.mybatis</groupId>
                <artifactId>mapper-spring-boot-starter</artifactId>
                <version>${tk-mybatis.version}</version>
            </dependency>
            <!--mybatis plus-->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pagehelper.version}</version>
            </dependency>
            <!-- jwt -->
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-api</artifactId>
                <version>${jjwt.version}</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-impl</artifactId>
                <version>${jjwt.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-jackson</artifactId>
                <version>${jjwt.version}</version>
                <scope>runtime</scope>
            </dependency>

            <!--加密算法-->
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcprov-jdk15on</artifactId>
                <version>${bcprov.version}</version>
            </dependency>

            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <scope>runtime</scope>
                <version>${mysql-connector.version}</version>
            </dependency>

            <!--Java工具包 https://www.hutool.cn/-->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <!--guava-->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <!--大汉三通-->
            <dependency>
                <groupId>dahantc</groupId>
                <artifactId>ezmorph</artifactId>
                <version>${dahan.ezmorph.version}</version>
                <!--<scope>system</scope>-->
                <!--<systemPath>${basedir}/lib/dahantc-ezmorph-1.0.6.jar</systemPath>-->
            </dependency>
            <dependency>
                <groupId>dahantc</groupId>
                <artifactId>http-json-api</artifactId>
                <version>${dahan.http.version}</version>
                <!--<scope>system</scope>-->
                <!--<systemPath>${basedir}/lib/dahantc-http-json-api-1.0.jar</systemPath>-->
            </dependency>
            <dependency>
                <groupId>net.sf.json-lib</groupId>
                <artifactId>json-lib</artifactId>
                <version>${json-lib.version}</version>
                <classifier>jdk15</classifier>
            </dependency>
            <!--json序列化-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>

            <!--spring cloud-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--spring cloud alibaba-->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!--监控服务端-->
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-starter-server</artifactId>
                <version>${spring-boot-admin.version}</version>
            </dependency>
            <!--监控客户端-->
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-starter-client</artifactId>
                <version>2.2.0</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <defaultGoal>spring-boot:run</defaultGoal>
        <finalName>${project.name}</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <configuration>
                        <finalName>${project.build.finalName}</finalName>
                        <!--fork:如果没有该项配置，肯定devtools不会起作用，即应用不会restart -->
                        <fork>true</fork>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!--docker 构建镜像-->
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>dockerfile-maven-plugin</artifactId>
                    <version>${dockerfile-maven.version}</version>
                    <executions>
                        <execution>
                            <id>build</id>
                            <phase>${docker-build-phase}</phase>
                            <goals>
                                <goal>build</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>push</id>
                            <phase>${docker-push-phase}</phase>
                            <goals>
                                <goal>push</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <repository>${docker.repository}/${project.artifactId}</repository>
                        <tag>${project.version}</tag>
                        <buildArgs>
                            <!--提供参数向Dockerfile传递-->
                            <JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
                            <PORT>${server.port}</PORT>
                        </buildArgs>
                        <useMavenSettingsForAuth>true</useMavenSettingsForAuth>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <target>${maven.compiler.target}</target>
                    <source>${maven.compiler.source}</source>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <!--<plugin>-->
            <!--<groupId>pl.project13.maven</groupId>-->
            <!--<artifactId>git-commit-id-plugin</artifactId>-->
            <!--<version>2.2.5</version>-->
            <!--</plugin>-->
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>local</id>
            <properties>
                <spring.active>local</spring.active>
                <docker-build-phase>deploy</docker-build-phase>
                <docker-push-phase>deploy</docker-push-phase>
                <docker.repository>qdigo-docker.pkg.coding.net/diandichuxing/docker</docker.repository>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
                <property>
                    <name>env</name>
                    <value>local</value>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-devtools</artifactId>
                    <optional>true</optional>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>dev</id>
            <properties>
                <spring.active>dev</spring.active>
            </properties>
            <activation>
                <property>
                    <name>env</name>
                    <value>dev</value>
                </property>
            </activation>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <spring.active>prod</spring.active>
                <docker-maven-phase>package</docker-maven-phase>
            </properties>
            <activation>
                <property>
                    <name>env</name>
                    <value>prod</value>
                </property>
            </activation>
        </profile>
        <profile>
            <id>test</id>
            <properties>
                <spring.active>test</spring.active>
                <docker-build-phase>install</docker-build-phase>
                <docker-push-phase>deploy</docker-push-phase>
                <docker.repository>qdigo-docker.pkg.coding.net/diandichuxing/docker</docker.repository>
            </properties>
            <activation>
                <property>
                    <name>env</name>
                    <value>test</value>
                </property>
            </activation>
        </profile>
    </profiles>

    <repositories>
        <!-- 阿里云私服 -->
        <repository>
            <id>maven-ali</id>
            <url>http://maven.aliyun.com/nexus/content/groups/public//</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
                <updatePolicy>always</updatePolicy>
                <checksumPolicy>fail</checksumPolicy>
            </snapshots>
        </repository>
        <!-- 自建私服 admin  admin123 -->
        <!--<repository>-->
        <!--<id>nexus</id>-->
        <!--<name>Nexus Snapshot Repository</name>-->
        <!--<url>http://60.190.223.145:8081/nexus/content/groups/public/</url>-->
        <!--<releases>-->
        <!--<enabled>true</enabled>-->
        <!--</releases>-->
        <!--<snapshots>-->
        <!--<enabled>true</enabled>-->
        <!--</snapshots>-->
        <!--</repository>-->
        <!--自建改为coding.net-->
        <repository>
            <id>qdigo-diandichuxing-qdigo_maven</id>
            <name>qdigo_maven</name>
            <url>https://qdigo-maven.pkg.coding.net/repository/diandichuxing/qdigo_maven/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <!--spring 私服-->
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>

    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>public</id>
            <name>aliyun nexus</name>
            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <distributionManagement>
        <repository>
            <!--必须与 settings.xml 的 id 一致-->
            <id>qdigo-diandichuxing-qdigo_maven</id>
            <name>qdigo_maven</name>
            <url>https://qdigo-maven.pkg.coding.net/repository/diandichuxing/qdigo_maven/</url>
        </repository>
    </distributionManagement>

</project>
